@page "/apartado/weather"
@rendermode InteractiveServer
@inject NavigationManager _navigationManager

@inject IFiestasClientes _fiestasClientes
@inject IFiestasSalones _fiestasSalones
@inject IFiestasReserva _fiestasReservas

<h3>Reserva tu salón de eventos</h3>

<EditForm Model="_reserva" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <ValidationSummary  />

    <div class="mb-3 row">
        <label for="selectCliente" class="col-sm-2 col-form-label">Cliente</label>
        <div>
            <InputSelect id="selectCliente" class="form-control" @bind-Value="_reserva.ClienteId">
                <option value="">Seleccione un cliente</option>
                @foreach (var cliente in _clientes)
                {
                    <option value="@cliente.Id">@cliente.Nombre</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => _reserva.ClienteId)" />
        </div>
    </div>

    <div class="mb-3">
        <label class="form-label">Nombre del Salón</label>
        <InputSelect class="form-control" @bind-Value="_reserva.SalonId">
            <option value="">-- Seleccione un salón --</option>
            @foreach (var salon in _salones)
            {
                <option value="@salon.Id">@salon.Nombre</option>
            }
        </InputSelect>
        <ValidationMessage For="@(() => _reserva.SalonId)" />
    </div>

    <div class="mb-3">
        <label class="form-label">Fecha</label>
        <InputDate class="form-control" @bind-Value="_reserva.fecha" />
        <ValidationMessage For="@(() => _reserva.fecha)" />
    </div>

    <button type="submit" class="btn btn-primary">Guardar Cambios</button>
    <button type="button" class="btn btn-secondary ms-2" @onclick="Cancelar">Cancelar</button>
</EditForm>

@code {
    private Reserva _reserva = new();
    private List<Salones> _salones = new();
    private List<Clientes> _clientes = new();
    private string? _error;

    protected override async Task OnInitializedAsync()
    {
        _salones = await _fiestasSalones.GetSalones();
        _clientes = await _fiestasClientes.ListarClientesAsync();
    }

    private async Task Guardar()
    {
        Console.WriteLine($"ID enviado: {_reserva.Id}");
        await _fiestasReservas.AddReserva(_reserva);
        _navigationManager.NavigateTo("/apartado");
    }

    private void Cancelar()
    {
        _navigationManager.NavigateTo("/apartado");
    }
}
